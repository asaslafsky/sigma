################################################################################
# SETUP
################################################################################
# Modules
from os.path import join

# Configuration

# Directories
SRC_DIR = '../src'
SIGNATURES_DIR = 'signatures'
MUTATIONS_DIR = 'mutations'

RAW_MUTATIONS_DIR = join(MUTATIONS_DIR, 'raw')

# Files
RAW_COSMIC_SIGNATURES = join(SIGNATURES_DIR, 'cosmic_signatures_probabilities.txt')
COSMIC_SIGNATURES = join(SIGNATURES_DIR, 'cosmic-signatures.tsv')

ICGC_R22_BRCA_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-BRCA-EU.RELEASE_22.SBS.tsv')
ICGC_R22_BRCA_MUTATIONS_RENAMED = join(RAW_MUTATIONS_DIR, 'ICGC-BRCA-EU.RELEASE_22.SBS.renamed.tsv')
ICGC_R22_BRCA_MUTATIONS_JSON = join(MUTATIONS_DIR, 'ICGC-BRCA-EU.RELEASE_22.SBS.renamed.sigma.json')
ICGC_R22_BRCA_MUTATIONS_MAPPABLE_BLACKLIST_JSON = join(MUTATIONS_DIR, 'ICGC-BRCA-EU.RELEASE_22.SBS.renamed.sigma.map_blacklist.json')
ICGC_R22_BRCA_SAMPLE_FILE = join(RAW_MUTATIONS_DIR, 'sample.r22.BRCA-EU.tsv')

ICGC_R25_PACA_AU_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-PACA-AU_PACA_25.SBS.tsv')
ICGC_R25_PACA_CA_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-PACA-CA_PACA_25.SBS.tsv')
ICGC_R25_PACA_AU_MUTATIONS_CLEAN = join(RAW_MUTATIONS_DIR, 'ICGC-PACA-AU_PACA_25.SBS.clean.tsv')
ICGC_R25_PACA_CA_MUTATIONS_CLEAN = join(RAW_MUTATIONS_DIR, 'ICGC-PACA-CA_PACA_25.SBS.clean.tsv')
ICGC_R25_PACA_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-PACA-AU-RELEASE_25.SBS.tsv')
ICGC_R25_PACA_MUTATIONS_JSON = join(MUTATIONS_DIR, 'ICGC-PACA-AU-RELEASE_25.SBS.sigma.json')

ICGC_R27_MALY_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-MALY-DE.RELEASE_27.SBS.tsv')
ICGC_R27_MALY_MUTATIONS_JSON = join(RAW_MUTATIONS_DIR, 'ICGC-MALY-DE-RELEASE_27.SBS.sigma.json')

ICGC_R27_CLLE_MUTATIONS = join(RAW_MUTATIONS_DIR, 'ICGC-CLLE-ES.RELEASE_27.SBS.tsv')
ICGC_R27_CLLE_MUTATIONS_CLEAN = join(RAW_MUTATIONS_DIR, 'ICGC-CLLE-ES.RELEASE_27.SBS.clean.tsv')
ICGC_R27_CLLE_MUTATIONS_JSON = join(RAW_MUTATIONS_DIR, 'ICGC-CLLE-ES-RELEASE_27.SBS.sigma.json')

HG19_BLACKLIST = join(RAW_MUTATIONS_DIR, 'hg19-blacklist.csv')

PROCESS_COSMIC_SIGNATURES_PY = join(SRC_DIR, 'process_cosmic_signatures.py')
PROCESS_MUTATIONS_FOR_SIGMA_PY = join(SRC_DIR, 'process_mutations_for_sigma.py')
CONVERT_PATIENT_NAMES_PY = join(SRC_DIR, 'convert_patient_names.py')

################################################################################
# RULES
################################################################################
# General
rule all:
    input:
        ICGC_R22_BRCA_MUTATIONS_JSON,
        ICGC_R22_BRCA_MUTATIONS_MAPPABLE_BLACKLIST_JSON,
        ICGC_R25_PACA_MUTATIONS_JSON,
        ICGC_R27_MALY_MUTATIONS_JSON,
        ICGC_R27_CLLE_MUTATIONS_JSON

# Download processed ICGC BRCA (release 22) BRCA mutations, convert into JSON
# format
rule convert_mappable_brca_mutations_to_json:
    input:
        mutations=ICGC_R22_BRCA_MUTATIONS_RENAMED,
        signatures=COSMIC_SIGNATURES,
        mappability=HG19_BLACKLIST
    output:
        ICGC_R22_BRCA_MUTATIONS_MAPPABLE_BLACKLIST_JSON
    shell:
        'python {PROCESS_MUTATIONS_FOR_SIGMA_PY} -mf {input.mutations} '\
        '-sf {input.signatures} -o {output} -mbf {input.mappability}'

rule convert_brca_mutations_to_json:
    input:
        mutations=ICGC_R22_BRCA_MUTATIONS_RENAMED,
        signatures=COSMIC_SIGNATURES
    output:
        ICGC_R22_BRCA_MUTATIONS_JSON
    shell:
        'python {PROCESS_MUTATIONS_FOR_SIGMA_PY} -mf {input.mutations} '\
        '-sf {input.signatures} -o {output}'

rule convert_brca_patient_names:
    input:
        mutations=ICGC_R22_BRCA_MUTATIONS,
        samples=ICGC_R22_BRCA_SAMPLE_FILE
    output:
        ICGC_R22_BRCA_MUTATIONS_RENAMED
    shell:
        'python {CONVERT_PATIENT_NAMES_PY} -mf {input.mutations} -sf {input.samples} '\
        '-o {output}'

rule download_icgc_r22_brca_mutations:
    params:
        url='https://obj.umiacs.umd.edu/mutation-signature-explorer/publications/Nik-Zainal2016/processed/extended/extended.ICGC-BRCA-EU_BRCA_22.SBS.tsv'
    output:
        ICGC_R22_BRCA_MUTATIONS
    shell:
        'wget -O {output} {params.url}'

rule download_hg19_blacklist:
    output:
        HG19_BLACKLIST
    run:
        import requests
        response = requests.get('https://docs.google.com/spreadsheet/ccc?key=1s_LNh4uAD3aIrr4TbOji7ehDMiFs0av0OD7prOk0jkA&output=csv')
        with open(HG19_BLACKLIST, 'w') as OUT:
            OUT.write('\n'.join(str(response.content).split('\\r\\n')))

rule download_sample_mapping:
    params:
        url='https://dcc.icgc.org/api/v1/download?fn=/release_22/Projects/BRCA-EU/sample.BRCA-EU.tsv.gz'
    output:
        ICGC_R22_BRCA_SAMPLE_FILE
    shell:
        'wget -O - {params.url} | gunzip -c > {output}'
        
# Download and process COSMIC signatures
rule process_cosmic_signatures:
    input:
        RAW_COSMIC_SIGNATURES
    output:
        COSMIC_SIGNATURES
    shell:
        'python {PROCESS_COSMIC_SIGNATURES_PY} -i {input} -o {output}'
        
rule download_cosmic_signatures:
    params:
        url='http://cancer.sanger.ac.uk/cancergenome/assets/signatures_probabilities.txt'
    output:
        RAW_COSMIC_SIGNATURES
    shell:
        'wget -O {output} {params.url}'

# Pancreatic cancer data
rule convert_paca_mutations_to_json:
    input:
        mutations=ICGC_R25_PACA_AU_MUTATIONS_CLEAN,
        signatures=COSMIC_SIGNATURES
    output:
        ICGC_R25_PACA_MUTATIONS_JSON
    shell:
        'python {PROCESS_MUTATIONS_FOR_SIGMA_PY} -mf {input.mutations} '\
        '-sf {input.signatures} -o {output}'

rule merge_paca_datasets:
    input:
        ICGC_R25_PACA_AU_MUTATIONS_CLEAN,
        ICGC_R25_PACA_CA_MUTATIONS_CLEAN
    output:
        ICGC_R25_PACA_MUTATIONS
    run:
        import pandas as pd
        
        df1 = pd.read_csv(input[0], sep='\t')
        cols = df1.columns
        df2 = pd.read_csv(input[1], sep='\t')

        pd.concat([df1_wgs, df2_wgs])[cols].to_csv(output[0], sep='\t', index=0)
        
rule clean_paca_au_dataset:
    input:
        ICGC_R25_PACA_AU_MUTATIONS,
        ICGC_R25_PACA_CA_MUTATIONS
    output:
        ICGC_R25_PACA_AU_MUTATIONS_CLEAN,
        ICGC_R25_PACA_CA_MUTATIONS_CLEAN
    run:
        import pandas as pd
        from collections import Counter
        for input_file, output_file in zip(input, output):
            df = pd.read_csv(input_file, sep='\t')
            cols = df.columns
            df_wgs = df.loc[df['Sequencing Strategy'] == 'WGS']

            # Restrict to the sample per patient with most mutations
            sample_whitelist = set()
            for p, p_df in df_wgs.groupby('Patient'):
                sample_mut_count = Counter(p_df['Sample'])
                sample_whitelist.add( sample_mut_count.most_common(1)[0][0] )
                
            df_wgs = df_wgs.loc[df['Sample'].isin(sample_whitelist)]
            
            # Restrict to patients with >500 mutations
            patient_mut_count = Counter(df['Patient'])
            patient_whitelist = set( p for p, c in patient_mut_count.items() if c >= 500 )
            df_wgs = df_wgs.loc[df['Patient'].isin(patient_whitelist)]
            
            df_wgs.to_csv(output_file, sep='\t', index=0)
        
rule download_icgc_r25_paca_ca_mutations:
    params:
        url='https://obj.umiacs.umd.edu/mutation-signature-explorer/mutations/ICGC/processed/extended/extended.ICGC-PACA-CA_PACA_25.WGS.SBS.tsv'
    output:
        ICGC_R25_PACA_CA_MUTATIONS
    shell:
        'wget -O {output} {params.url}'

rule download_icgc_r25_paca_au_mutations:
    params:
        url='https://obj.umiacs.umd.edu/mutation-signature-explorer/mutations/ICGC/processed/extended/extended.ICGC-PACA-AU_PACA_25.WGS.SBS.tsv'
    output:
        ICGC_R25_PACA_AU_MUTATIONS
    shell:
        'wget -O {output} {params.url}'
        
# Malignant lymphoma data
rule convert_maly_mutations_to_json:
    input:
        mutations=ICGC_R27_MALY_MUTATIONS,
        signatures=COSMIC_SIGNATURES
    output:
        ICGC_R27_MALY_MUTATIONS_JSON
    shell:
        'python {PROCESS_MUTATIONS_FOR_SIGMA_PY} -mf {input.mutations} '\
        '-sf {input.signatures} -o {output}'

rule download_icgc_r27_maly_de_data:
    params:
        url='https://obj.umiacs.umd.edu/mutation-signature-explorer/mutations/ICGC/processed/extended/extended.ICGC-MALY-DE_MALY_27.WGS.SBS.tsv'
    output:
        ICGC_R27_MALY_MUTATIONS
    shell:
        'wget -O {output} {params.url}'

# Chronic lymphocytic leukemia data
rule convert_clle_mutations_to_json:
    input:
        mutations=ICGC_R27_CLLE_MUTATIONS_CLEAN,
        signatures=COSMIC_SIGNATURES
    output:
        ICGC_R27_CLLE_MUTATIONS_JSON
    shell:
        'python {PROCESS_MUTATIONS_FOR_SIGMA_PY} -mf {input.mutations} '\
        '-sf {input.signatures} -o {output}'

rule clean_clle_data:
    input:
        ICGC_R27_CLLE_MUTATIONS
    output:
        ICGC_R27_CLLE_MUTATIONS_CLEAN
    run:
        import pandas as pd
        from collections import Counter
        df = pd.read_csv(input[0], sep='\t')
        cols = df.columns

        # Restrict to the sample per patient with most mutations
        sample_whitelist = set()
        for p, p_df in df.groupby('Patient'):
            sample_mut_count = Counter(p_df['Sample'])
            sample_whitelist.add( sample_mut_count.most_common(1)[0][0] )
           
        df = df.loc[df['Sample'].isin(sample_whitelist)]
        df[cols].to_csv(output[0], sep='\t')
        
rule download_icgc_r27_clle_es_data:
    params:
        url='https://obj.umiacs.umd.edu/mutation-signature-explorer/mutations/ICGC/processed/extended/extended.ICGC-CLLE-ES_CLLE_27.WGS.SBS.tsv'
    output:
        ICGC_R27_CLLE_MUTATIONS
    shell:
        'wget -O {output} {params.url}'
